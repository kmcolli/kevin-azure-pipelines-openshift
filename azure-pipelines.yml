trigger:
- main

pool:
  name: Default

variables:
  project-name-dev: 'ado-openshift'
  image-name: 'ado-dotnet'

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: BuildAndPushJob
    displayName: Build and Push Job
    steps:
    - task: Docker@2.240.2
      displayName: 'Build Docker image'
      inputs:
        command: 'build'
        containerRegistry: 'openshift-registry'
        buildContext: 'App'
        repository: '$(project-name-dev)/$(image-name)'
        Dockerfile: 'Dockerfile'
        tags: $(Build.BuildId)
    - task: Docker@2.240.2
      displayName: 'Push Docker image to OpenShift internal registry'
      inputs:
        command: 'push'
        containerRegistry: 'openshift-registry'
        repository: '$(project-name-dev)/$(image-name)'
        tags: $(Build.BuildId)
    - task: PublishPipelineArtifact@1
      displayName: Publish pipeline artifacts
      inputs:
        targetPath: '$(Build.SourcesDirectory)/manifests'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy to DEV
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployDevJob
    displayName: Deploy to DEV Job
    steps:
    - task: CmdLine@2
      displayName: Curl Example
      inputs:
        script: 'curl -H "Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IlVZajhqT2JoVmdUX2NRVGxZYWQ0NEo1RDJHUHJ6bGdpWXFQUWUxSDNlX1EifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhZG8tb3BlbnNoaWZ0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImF6dXJlLXNhLXNlY3JldCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhenVyZS1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjEzMTc4MTg2LWIwNDUtNDNkNy1iMDQ1LWY3ZjVhZjE2ZGIzOCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDphZG8tb3BlbnNoaWZ0OmF6dXJlLXNhIn0.tpvEQJIOLW6ojUfdyjw2tnekQWBgVwLfyH13vaWOBrc1oA38JZexWXZgLNZ0HtrDZgvoHCA_8QDKiuqfOXGE-jc779nhPWIm5B4ggX3wGBq__eX9k_NHYyRNBE61jmgRoYLvDGvaVgSuS8y8E-R7ODmtQzNvp5IMz7sjKkPy8geFftfdAfcglhcy66F7Pqgja1ULi1QyGCQJhogSIDlKb7OIepxMo0RpDBgSbdPHXJdgJtRAFhOuZJDG0h2sjEfZXm_cTxMj024j4nmZX7xxiM3VHykq87z02i034i-ktum_s2A0JSuo0KM4U6ZvF9qKF_AnLNWVg4Yz9KRfHdZzv2yhDfHehnhHj2L-Qj7Xa6EUt6-bNJVzCn7paWRXrRaDc58C-1rFDAXtT8GtiZyune4bT8pOQTkkelrz15SC-zeW4kOCzxthQZEC6-4bVHYzTNmugGKiCGku9Sfrmfc7C27bhpOASXOnA6axuGcsSXc1FfXZOQyvEC6vIjkgVFm4tFnUy4gpu8K9CkT3QyBpmXssvG6l2HEo-Lxy6GjIrTdjdHbaJY79PhbbndoKuJVkX0PSj9Hjj_LHfLk0jDZvql-fSVeZrCdyEhvFTBm0MGHO_6tvTgGVnQ5Gs5BuN5_CAq8bj4X47dF4zj3rMsz0SD3XRIvTkMCCEtjVarn2I3E" https://api.drangana.gv9e.p3.openshiftapps.com/openapi/v2'
    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: deploy
        kubernetesServiceConnection: 'openshift'
        namespace: '$(project-name-dev)'
        manifests: |
          $(Build.SourcesDirectory)/manifests/*.yaml
        containers: 'image-registry.openshift-image-registry.svc:5000/$(project-name-dev)/$(image-name):$(Build.BuildId)'
